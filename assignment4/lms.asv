function [params, error, y_hat] = lms(output,input, order, lr, gamma)
%LMS Computes the lms estimate using gradient descent
%   params - dynamics of the weights learnt from the data
%   error - dynamics of the prediction error
%   y_hat - predicted output by filter
%   output - desired signal
%   input - input signal used to generate output
%   order - order parameter that determines number of parameters to be
%   estimated
%   lr - step size/ learning rate 
%   gamma - leakage coefficient

N = length(output);
params = zeros(order,N); % n_parameters = order
error = zeros(N,1);
y_hat = zeros(N,1);

for n = 1:N
    y_hat = params(:,n)*
    current_error = data(i) - dot(flip(data(i-order:i-1)), params(:, i-1));
    error(i) = current_error;
    params(:, i) = (1-lr*gamma)*params(:, i-1) + lr*(current_error)*flip(data(i-order:i-1));
end

